// Code generated by ent, DO NOT EDIT.

package ent

import (
	"go-ranking-api/ent/asset"
	"go-ranking-api/ent/ranking"
	"go-ranking-api/ent/schema"
	"go-ranking-api/ent/song"
	"go-ranking-api/ent/token"
	"go-ranking-api/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	assetFields := schema.Asset{}.Fields()
	_ = assetFields
	// assetDescPath is the schema descriptor for path field.
	assetDescPath := assetFields[1].Descriptor()
	// asset.PathValidator is a validator for the "path" field. It is called by the builders before save.
	asset.PathValidator = assetDescPath.Validators[0].(func(string) error)
	// assetDescHash is the schema descriptor for hash field.
	assetDescHash := assetFields[2].Descriptor()
	// asset.HashValidator is a validator for the "hash" field. It is called by the builders before save.
	asset.HashValidator = assetDescHash.Validators[0].(func(string) error)
	// assetDescCreatedAt is the schema descriptor for created_at field.
	assetDescCreatedAt := assetFields[3].Descriptor()
	// asset.DefaultCreatedAt holds the default value on creation for the created_at field.
	asset.DefaultCreatedAt = assetDescCreatedAt.Default.(func() time.Time)
	// assetDescUpdatedAt is the schema descriptor for updated_at field.
	assetDescUpdatedAt := assetFields[4].Descriptor()
	// asset.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	asset.DefaultUpdatedAt = assetDescUpdatedAt.Default.(func() time.Time)
	// asset.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	asset.UpdateDefaultUpdatedAt = assetDescUpdatedAt.UpdateDefault.(func() time.Time)
	rankingFields := schema.Ranking{}.Fields()
	_ = rankingFields
	// rankingDescScore is the schema descriptor for score field.
	rankingDescScore := rankingFields[0].Descriptor()
	// ranking.ScoreValidator is a validator for the "score" field. It is called by the builders before save.
	ranking.ScoreValidator = rankingDescScore.Validators[0].(func(int64) error)
	// rankingDescCreatedAt is the schema descriptor for created_at field.
	rankingDescCreatedAt := rankingFields[2].Descriptor()
	// ranking.DefaultCreatedAt holds the default value on creation for the created_at field.
	ranking.DefaultCreatedAt = rankingDescCreatedAt.Default.(func() time.Time)
	// rankingDescUpdatedAt is the schema descriptor for updated_at field.
	rankingDescUpdatedAt := rankingFields[3].Descriptor()
	// ranking.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	ranking.DefaultUpdatedAt = rankingDescUpdatedAt.Default.(func() time.Time)
	// ranking.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	ranking.UpdateDefaultUpdatedAt = rankingDescUpdatedAt.UpdateDefault.(func() time.Time)
	songFields := schema.Song{}.Fields()
	_ = songFields
	// songDescCreatedAt is the schema descriptor for created_at field.
	songDescCreatedAt := songFields[2].Descriptor()
	// song.DefaultCreatedAt holds the default value on creation for the created_at field.
	song.DefaultCreatedAt = songDescCreatedAt.Default.(func() time.Time)
	// songDescUpdatedAt is the schema descriptor for updated_at field.
	songDescUpdatedAt := songFields[3].Descriptor()
	// song.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	song.DefaultUpdatedAt = songDescUpdatedAt.Default.(func() time.Time)
	// song.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	song.UpdateDefaultUpdatedAt = songDescUpdatedAt.UpdateDefault.(func() time.Time)
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescCreatedAt is the schema descriptor for created_at field.
	tokenDescCreatedAt := tokenFields[4].Descriptor()
	// token.DefaultCreatedAt holds the default value on creation for the created_at field.
	token.DefaultCreatedAt = tokenDescCreatedAt.Default.(func() time.Time)
	// tokenDescUpdatedAt is the schema descriptor for updated_at field.
	tokenDescUpdatedAt := tokenFields[5].Descriptor()
	// token.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	token.DefaultUpdatedAt = tokenDescUpdatedAt.Default.(func() time.Time)
	// token.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	token.UpdateDefaultUpdatedAt = tokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[2].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[3].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
